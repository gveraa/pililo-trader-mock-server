{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "API Mock Definition",
  "type": "object",
  "required": ["name", "type", "mappings"],
  "properties": {
    "name": {
      "type": "string",
      "description": "Name identifier for this mock configuration"
    },
    "type": {
      "type": "string",
      "const": "api",
      "description": "Type of mock - must be 'api' for REST API mocks"
    },
    "description": {
      "type": "string",
      "description": "Optional description of what this mock simulates"
    },
    "mappings": {
      "type": "array",
      "description": "Array of request/response mappings",
      "items": {
        "type": "object",
        "required": ["request", "response"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Optional unique identifier for this mapping"
          },
          "request": {
            "type": "object",
            "description": "Request matching criteria",
            "properties": {
              "method": {
                "type": "string",
                "enum": ["GET", "POST", "PUT", "DELETE", "PATCH", "HEAD", "OPTIONS"],
                "description": "HTTP method to match"
              },
              "urlPath": {
                "type": "string",
                "description": "Exact URL path to match"
              },
              "urlPathPattern": {
                "type": "string",
                "description": "Regex pattern to match URL path"
              },
              "headers": {
                "type": "object",
                "description": "Headers to match",
                "properties": {
                  "X-Mock-Scenario": {
                    "type": "object",
                    "description": "Mock scenario header for testing different behaviors",
                    "oneOf": [
                      {
                        "properties": {
                          "matches": {
                            "type": "string",
                            "description": "Regex pattern for dynamic scenarios",
                            "enum": [
                              "slow-response-\\d+",
                              "request-timeout-after-\\d+",
                              "connection-reset",
                              "connection-refused",
                              "network-unreachable",
                              "dns-resolution-failure",
                              "valid-auth-bearer",
                              "valid-auth-basic",
                              "valid-auth-apikey-[\\w-]+",
                              "valid-auth-jwt",
                              "valid-auth-oauth2",
                              "invalid-auth-bearer",
                              "invalid-auth-bearer-expired",
                              "invalid-auth-bearer-malformed",
                              "invalid-auth-basic",
                              "invalid-auth-basic-format",
                              "invalid-auth-apikey-[\\w-]+",
                              "invalid-auth-jwt",
                              "invalid-auth-jwt-expired",
                              "invalid-auth-oauth2",
                              "missing-auth-bearer",
                              "missing-auth-basic",
                              "missing-auth-apikey-[\\w-]+",
                              "missing-auth-jwt",
                              "missing-auth-oauth2",
                              "partial-data-\\d{1,3}",
                              "data-missing-field-[\\w-]+",
                              "data-null-field-[\\w-]+",
                              "data-wrong-type-field-[\\w-]+",
                              "data-corrupted-json",
                              "data-extra-fields",
                              "data-truncated-\\d{1,3}",
                              "error-400-bad-request",
                              "error-401-unauthorized",
                              "error-403-forbidden",
                              "error-404-not-found",
                              "error-405-method-not-allowed",
                              "error-409-conflict",
                              "error-422-validation-failed",
                              "error-429-too-many-requests",
                              "error-500-internal",
                              "error-502-bad-gateway",
                              "error-503-service-unavailable",
                              "error-504-gateway-timeout",
                              "error-507-insufficient-storage"
                            ]
                          }
                        },
                        "required": ["matches"],
                        "additionalProperties": false
                      },
                      {
                        "properties": {
                          "absent": {
                            "type": "boolean",
                            "const": true,
                            "description": "Match when header is absent"
                          }
                        },
                        "required": ["absent"],
                        "additionalProperties": false
                      }
                    ]
                  }
                },
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "matches": {
                      "type": "string",
                      "description": "Regex pattern to match header value"
                    },
                    "equals": {
                      "type": "string",
                      "description": "Exact value to match"
                    },
                    "equalTo": {
                      "type": "string",
                      "description": "Exact value to match (alias for equals)"
                    },
                    "absent": {
                      "type": "boolean",
                      "description": "Match when header is absent"
                    }
                  }
                }
              },
              "queryParameters": {
                "type": "object",
                "description": "Query parameters to match",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "matches": {
                      "type": "string",
                      "description": "Regex pattern to match parameter value"
                    },
                    "equals": {
                      "type": "string",
                      "description": "Exact value to match"
                    }
                  }
                }
              },
              "bodyPatterns": {
                "type": "array",
                "description": "Patterns to match in request body",
                "items": {
                  "type": "object",
                  "properties": {
                    "contains": {
                      "type": "string",
                      "description": "Substring to find in body"
                    },
                    "matches": {
                      "type": "string",
                      "description": "Regex pattern to match body"
                    },
                    "equalToJson": {
                      "description": "JSON object to match exactly"
                    },
                    "matchesJsonPath": {
                      "type": "object",
                      "properties": {
                        "expression": {
                          "type": "string",
                          "description": "JSONPath expression"
                        },
                        "contains": {
                          "type": "string",
                          "description": "Expected value contains"
                        },
                        "equals": {
                          "description": "Expected value equals"
                        },
                        "matches": {
                          "type": "string",
                          "description": "Regex pattern for value"
                        }
                      }
                    }
                  }
                }
              }
            },
            "oneOf": [
              {"required": ["urlPath"]},
              {"required": ["urlPathPattern"]}
            ]
          },
          "response": {
            "type": "object",
            "description": "Response to send when request matches",
            "required": ["status"],
            "properties": {
              "status": {
                "type": "integer",
                "minimum": 100,
                "maximum": 599,
                "description": "HTTP status code"
              },
              "headers": {
                "type": "object",
                "description": "Response headers",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "body": {
                "type": "string",
                "description": "Response body as string"
              },
              "jsonBody": {
                "description": "Response body as JSON object"
              },
              "base64Body": {
                "type": "string",
                "description": "Response body as base64 encoded string"
              },
              "delay": {
                "type": "integer",
                "minimum": 0,
                "description": "Delay in milliseconds before sending response"
              }
            }
          },
          "enabled": {
            "type": "boolean",
            "default": true,
            "description": "Whether this mapping is active"
          },
          "allowedScenarios": {
            "type": "array",
            "description": "List of allowed X-Mock-Scenario patterns. If specified, only these scenarios will be processed.",
            "items": {
              "type": "string"
            }
          },
          "forbiddenScenarios": {
            "type": "array", 
            "description": "List of forbidden X-Mock-Scenario patterns. These scenarios will be ignored.",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}